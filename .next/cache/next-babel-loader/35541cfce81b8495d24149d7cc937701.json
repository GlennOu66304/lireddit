{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/glenn/lireddit/src/pages/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Box, Button, Flex, Heading, Link, Stack, Text } from \"@chakra-ui/core\";\nimport NextLink from \"next/link\";\nimport { EditDeletePostButtons } from \"../components/EditDeletePostButtons\";\nimport { Layout } from \"../components/Layout\";\nimport { UpdootSection } from \"../components/UpdootSection\";\nimport { usePostsQuery } from \"../generated/graphql\";\nimport { withApollo } from \"../utils/withApollo\";\n\nvar Index = function Index() {\n  _s();\n\n  var _usePostsQuery = usePostsQuery({\n    variables: {\n      limit: 15,\n      cursor: null\n    },\n    notifyOnNetworkStatusChange: true\n  }),\n      data = _usePostsQuery.data,\n      error = _usePostsQuery.error,\n      loading = _usePostsQuery.loading,\n      fetchMore = _usePostsQuery.fetchMore,\n      variables = _usePostsQuery.variables;\n\n  if (!loading && !data) {\n    return __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, \"you got query failed for some reason\"), __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }, error === null || error === void 0 ? void 0 : error.message));\n  }\n\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, !data && loading ? __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, \"loading...\") : __jsx(Stack, {\n    spacing: 8,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, data.posts.posts.map(function (p) {\n    return !p ? null : __jsx(Flex, {\n      key: p.id,\n      p: 5,\n      shadow: \"md\",\n      borderWidth: \"1px\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }\n    }, __jsx(UpdootSection, {\n      post: p,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }), __jsx(Box, {\n      flex: 1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, __jsx(NextLink, {\n      href: \"/post/[id]\",\n      as: \"/post/\".concat(p.id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 19\n      }\n    }, __jsx(Link, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }\n    }, __jsx(Heading, {\n      fontSize: \"xl\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 23\n      }\n    }, p.title))), __jsx(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 19\n      }\n    }, \"posted by \", p.creator.username), __jsx(Flex, {\n      align: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 19\n      }\n    }, __jsx(Text, {\n      flex: 1,\n      mt: 4,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }\n    }, p.textSnippet), __jsx(Box, {\n      ml: \"auto\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }, __jsx(EditDeletePostButtons, {\n      id: p.id,\n      creatorId: p.creator.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 23\n      }\n    })))));\n  })), data && data.posts.hasMore ? __jsx(Flex, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    onClick: function onClick() {\n      fetchMore({\n        variables: {\n          limit: variables === null || variables === void 0 ? void 0 : variables.limit,\n          cursor: data.posts.posts[data.posts.posts.length - 1].createdAt\n        } // updateQuery: (\n        //   previousValue,\n        //   { fetchMoreResult }\n        // ): PostsQuery => {\n        //   if (!fetchMoreResult) {\n        //     return previousValue as PostsQuery;\n        //   }\n        //   return {\n        //     __typename: \"Query\",\n        //     posts: {\n        //       __typename: \"PaginatedPosts\",\n        //       hasMore: (fetchMoreResult as PostsQuery).posts.hasMore,\n        //       posts: [\n        //         ...(previousValue as PostsQuery).posts.posts,\n        //         ...(fetchMoreResult as PostsQuery).posts.posts,\n        //       ],\n        //     },\n        //   };\n        // },\n\n      });\n    },\n    isLoading: loading,\n    m: \"auto\",\n    my: 8,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, \"load more\")) : null);\n};\n\n_s(Index, \"Sg7ZqMsf9H2CFasnJv3yNqrlz/M=\", false, function () {\n  return [usePostsQuery];\n});\n\n_c = Index;\nexport default withApollo({\n  ssr: true\n})(Index);\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/glenn/lireddit/src/pages/index.tsx"],"names":["Box","Button","Flex","Heading","Link","Stack","Text","NextLink","EditDeletePostButtons","Layout","UpdootSection","usePostsQuery","withApollo","Index","variables","limit","cursor","notifyOnNetworkStatusChange","data","error","loading","fetchMore","message","posts","map","p","id","title","creator","username","textSnippet","hasMore","length","createdAt","ssr"],"mappings":"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","sourcesContent":["import { Box, Button, Flex, Heading, Link, Stack, Text } from \"@chakra-ui/core\";\nimport { withUrqlClient } from \"next-urql\";\nimport NextLink from \"next/link\";\nimport { useState } from \"react\";\nimport { EditDeletePostButtons } from \"../components/EditDeletePostButtons\";\nimport { Layout } from \"../components/Layout\";\nimport { UpdootSection } from \"../components/UpdootSection\";\nimport { usePostsQuery, PostsQuery } from \"../generated/graphql\";\nimport { createUrqlClient } from \"../utils/createUrqlClient\";\nimport { withApollo } from \"../utils/withApollo\";\n\nconst Index = () => {\n  const { data, error, loading, fetchMore, variables } = usePostsQuery({\n    variables: {\n      limit: 15,\n      cursor: null,\n    },\n    notifyOnNetworkStatusChange: true,\n  });\n\n  if (!loading && !data) {\n    return (\n      <div>\n        <div>you got query failed for some reason</div>\n        <div>{error?.message}</div>\n      </div>\n    );\n  }\n\n  return (\n    <Layout>\n      {!data && loading ? (\n        <div>loading...</div>\n      ) : (\n        <Stack spacing={8}>\n          {data!.posts.posts.map((p) =>\n            !p ? null : (\n              <Flex key={p.id} p={5} shadow=\"md\" borderWidth=\"1px\">\n                <UpdootSection post={p} />\n                <Box flex={1}>\n                  <NextLink href=\"/post/[id]\" as={`/post/${p.id}`}>\n                    <Link>\n                      <Heading fontSize=\"xl\">{p.title}</Heading>\n                    </Link>\n                  </NextLink>\n                  <Text>posted by {p.creator.username}</Text>\n                  <Flex align=\"center\">\n                    <Text flex={1} mt={4}>\n                      {p.textSnippet}\n                    </Text>\n                    <Box ml=\"auto\">\n                      <EditDeletePostButtons\n                        id={p.id}\n                        creatorId={p.creator.id}\n                      />\n                    </Box>\n                  </Flex>\n                </Box>\n              </Flex>\n            )\n          )}\n        </Stack>\n      )}\n      {data && data.posts.hasMore ? (\n        <Flex>\n          <Button\n            onClick={() => {\n              fetchMore({\n                variables: {\n                  limit: variables?.limit,\n                  cursor:\n                    data.posts.posts[data.posts.posts.length - 1].createdAt,\n                },\n                // updateQuery: (\n                //   previousValue,\n                //   { fetchMoreResult }\n                // ): PostsQuery => {\n                //   if (!fetchMoreResult) {\n                //     return previousValue as PostsQuery;\n                //   }\n\n                //   return {\n                //     __typename: \"Query\",\n                //     posts: {\n                //       __typename: \"PaginatedPosts\",\n                //       hasMore: (fetchMoreResult as PostsQuery).posts.hasMore,\n                //       posts: [\n                //         ...(previousValue as PostsQuery).posts.posts,\n                //         ...(fetchMoreResult as PostsQuery).posts.posts,\n                //       ],\n                //     },\n                //   };\n                // },\n              });\n            }}\n            isLoading={loading}\n            m=\"auto\"\n            my={8}\n          >\n            load more\n          </Button>\n        </Flex>\n      ) : null}\n    </Layout>\n  );\n};\n\nexport default withApollo({ ssr: true })(Index);\n"]},"metadata":{},"sourceType":"module"}