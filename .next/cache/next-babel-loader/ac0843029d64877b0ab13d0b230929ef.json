{"ast":null,"code":"var _jsxFileName = \"/Users/glenn/lireddit/src/components/UpdootSection.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { Flex, IconButton } from \"@chakra-ui/core\";\nimport { useVoteMutation } from \"../generated/graphql\";\nimport gql from \"graphql-tag\";\n\nconst updateAfterVote = (value, postId, cache) => {\n  const data = cache.readFragment({\n    id: \"Post:\" + postId,\n    fragment: gql`\n      fragment _ on Post {\n        id\n        points\n        voteStatus\n      }\n    `\n  });\n\n  if (data) {\n    if (data.voteStatus === value) {\n      return;\n    }\n\n    const newPoints = data.points + (!data.voteStatus ? 1 : 2) * value;\n    cache.writeFragment({\n      id: \"Post:\" + postId,\n      fragment: gql`\n        fragment __ on Post {\n          points\n          voteStatus\n        }\n      `,\n      data: {\n        points: newPoints,\n        voteStatus: value\n      }\n    });\n  }\n};\n\nexport const UpdootSection = ({\n  post\n}) => {\n  const {\n    0: loadingState,\n    1: setLoadingState\n  } = useState(\"not-loading\");\n  const [vote] = useVoteMutation();\n  return __jsx(Flex, {\n    direction: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    mr: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, __jsx(IconButton, {\n    onClick: async () => {\n      if (post.voteStatus === 1) {\n        return;\n      }\n\n      setLoadingState(\"updoot-loading\");\n      await vote({\n        variables: {\n          postId: post.id,\n          value: 1\n        },\n        update: cache => updateAfterVote(1, post.id, cache)\n      });\n      setLoadingState(\"not-loading\");\n    },\n    variantColor: post.voteStatus === 1 ? \"green\" : undefined,\n    isLoading: loadingState === \"updoot-loading\",\n    \"aria-label\": \"updoot post\",\n    icon: \"chevron-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), post.points, __jsx(IconButton, {\n    onClick: async () => {\n      if (post.voteStatus === -1) {\n        return;\n      }\n\n      setLoadingState(\"downdoot-loading\");\n      await vote({\n        variables: {\n          postId: post.id,\n          value: -1\n        },\n        update: cache => updateAfterVote(-1, post.id, cache)\n      });\n      setLoadingState(\"not-loading\");\n    },\n    variantColor: post.voteStatus === -1 ? \"red\" : undefined,\n    isLoading: loadingState === \"downdoot-loading\",\n    \"aria-label\": \"downdoot post\",\n    icon: \"chevron-down\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/glenn/lireddit/src/components/UpdootSection.tsx"],"names":["React","useState","Flex","IconButton","useVoteMutation","gql","updateAfterVote","value","postId","cache","data","readFragment","id","fragment","voteStatus","newPoints","points","writeFragment","UpdootSection","post","loadingState","setLoadingState","vote","variables","update","undefined"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Flex, IconButton } from \"@chakra-ui/core\";\nimport {\n  PostSnippetFragment,\n  useVoteMutation,\n  VoteMutation,\n} from \"../generated/graphql\";\nimport gql from \"graphql-tag\";\nimport { ApolloCache } from \"@apollo/client\";\n\ninterface UpdootSectionProps {\n  post: PostSnippetFragment;\n}\n\nconst updateAfterVote = (\n  value: number,\n  postId: number,\n  cache: ApolloCache<VoteMutation>\n) => {\n  const data = cache.readFragment<{\n    id: number;\n    points: number;\n    voteStatus: number | null;\n  }>({\n    id: \"Post:\" + postId,\n    fragment: gql`\n      fragment _ on Post {\n        id\n        points\n        voteStatus\n      }\n    `,\n  });\n\n  if (data) {\n    if (data.voteStatus === value) {\n      return;\n    }\n    const newPoints =\n      (data.points as number) + (!data.voteStatus ? 1 : 2) * value;\n    cache.writeFragment({\n      id: \"Post:\" + postId,\n      fragment: gql`\n        fragment __ on Post {\n          points\n          voteStatus\n        }\n      `,\n      data: { points: newPoints, voteStatus: value },\n    });\n  }\n};\n\nexport const UpdootSection: React.FC<UpdootSectionProps> = ({ post }) => {\n  const [loadingState, setLoadingState] = useState<\n    \"updoot-loading\" | \"downdoot-loading\" | \"not-loading\"\n  >(\"not-loading\");\n  const [vote] = useVoteMutation();\n  return (\n    <Flex direction=\"column\" justifyContent=\"center\" alignItems=\"center\" mr={4}>\n      <IconButton\n        onClick={async () => {\n          if (post.voteStatus === 1) {\n            return;\n          }\n          setLoadingState(\"updoot-loading\");\n          await vote({\n            variables: {\n              postId: post.id,\n              value: 1,\n            },\n            update: (cache) => updateAfterVote(1, post.id, cache),\n          });\n          setLoadingState(\"not-loading\");\n        }}\n        variantColor={post.voteStatus === 1 ? \"green\" : undefined}\n        isLoading={loadingState === \"updoot-loading\"}\n        aria-label=\"updoot post\"\n        icon=\"chevron-up\"\n      />\n      {post.points}\n      <IconButton\n        onClick={async () => {\n          if (post.voteStatus === -1) {\n            return;\n          }\n          setLoadingState(\"downdoot-loading\");\n          await vote({\n            variables: {\n              postId: post.id,\n              value: -1,\n            },\n            update: (cache) => updateAfterVote(-1, post.id, cache),\n          });\n          setLoadingState(\"not-loading\");\n        }}\n        variantColor={post.voteStatus === -1 ? \"red\" : undefined}\n        isLoading={loadingState === \"downdoot-loading\"}\n        aria-label=\"downdoot post\"\n        icon=\"chevron-down\"\n      />\n    </Flex>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}