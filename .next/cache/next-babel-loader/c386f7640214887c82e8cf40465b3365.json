{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { Flex, IconButton } from \"@chakra-ui/core\";\nimport { useVoteMutation } from \"../generated/graphql\";\nimport gql from \"graphql-tag\";\n\nconst updateAfterVote = (value, postId, cache) => {\n  const data = cache.readFragment({\n    id: \"Post:\" + postId,\n    fragment: gql`\n      fragment _ on Post {\n        id\n        points\n        voteStatus\n      }\n    `\n  });\n\n  if (data) {\n    if (data.voteStatus === value) {\n      return;\n    }\n\n    const newPoints = data.points + (!data.voteStatus ? 1 : 2) * value;\n    cache.writeFragment({\n      id: \"Post:\" + postId,\n      fragment: gql`\n        fragment __ on Post {\n          points\n          voteStatus\n        }\n      `,\n      data: {\n        points: newPoints,\n        voteStatus: value\n      }\n    });\n  }\n};\n\nexport const UpdootSection = ({\n  post\n}) => {\n  const {\n    0: loadingState,\n    1: setLoadingState\n  } = useState(\"not-loading\");\n  const [vote] = useVoteMutation();\n  return __jsx(Flex, {\n    direction: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    mr: 4\n  }, __jsx(IconButton, {\n    onClick: async () => {\n      if (post.voteStatus === 1) {\n        return;\n      }\n\n      setLoadingState(\"updoot-loading\");\n      await vote({\n        variables: {\n          postId: post.id,\n          value: 1\n        },\n        update: cache => updateAfterVote(1, post.id, cache)\n      });\n      setLoadingState(\"not-loading\");\n    },\n    variantColor: post.voteStatus === 1 ? \"green\" : undefined,\n    isLoading: loadingState === \"updoot-loading\",\n    \"aria-label\": \"updoot post\",\n    icon: \"chevron-up\"\n  }), post.points, __jsx(IconButton, {\n    onClick: async () => {\n      if (post.voteStatus === -1) {\n        return;\n      }\n\n      setLoadingState(\"downdoot-loading\");\n      await vote({\n        variables: {\n          postId: post.id,\n          value: -1\n        },\n        update: cache => updateAfterVote(-1, post.id, cache)\n      });\n      setLoadingState(\"not-loading\");\n    },\n    variantColor: post.voteStatus === -1 ? \"red\" : undefined,\n    isLoading: loadingState === \"downdoot-loading\",\n    \"aria-label\": \"downdoot post\",\n    icon: \"chevron-down\"\n  }));\n};","map":null,"metadata":{},"sourceType":"module"}