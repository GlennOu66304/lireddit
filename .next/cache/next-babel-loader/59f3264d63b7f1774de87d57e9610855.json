{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { Wrapper } from \"../components/Wrapper\";\nimport { Formik, Form } from \"formik\";\nimport { InputField } from \"../components/InputField\";\nimport { Box, Button } from \"@chakra-ui/core\";\nimport { useForgotPasswordMutation } from \"../generated/graphql\";\nimport { withApollo } from \"../utils/withApollo\";\n\nvar ForgotPassword = function ForgotPassword(_ref) {\n  _objectDestructuringEmpty(_ref);\n\n  var _useState = useState(false),\n      complete = _useState[0],\n      setComplete = _useState[1];\n\n  var _useForgotPasswordMut = useForgotPasswordMutation(),\n      _useForgotPasswordMut2 = _slicedToArray(_useForgotPasswordMut, 1),\n      forgotPassword = _useForgotPasswordMut2[0];\n\n  return __jsx(Wrapper, {\n    variant: \"small\"\n  }, __jsx(Formik, {\n    initialValues: {\n      email: \"\"\n    },\n    onSubmit: /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return forgotPassword({\n                  variables: values\n                });\n\n              case 2:\n                setComplete(true);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  }, function (_ref3) {\n    var isSubmitting = _ref3.isSubmitting;\n    return complete ? __jsx(Box, null, \"if an account with that email exists, we sent you can email\") : __jsx(Form, null, __jsx(InputField, {\n      name: \"email\",\n      placeholder: \"email\",\n      label: \"Email\",\n      type: \"email\"\n    }), __jsx(Button, {\n      mt: 4,\n      type: \"submit\",\n      isLoading: isSubmitting,\n      variantColor: \"teal\"\n    }, \"forgot password\"));\n  }));\n};\n\nexport default withApollo({\n  ssr: false\n})(ForgotPassword);","map":null,"metadata":{},"sourceType":"module"}