{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useField } from \"formik\";\nimport { FormControl, FormLabel, Input, FormErrorMessage, Textarea } from \"@chakra-ui/core\";\n// '' => false\n// 'error message stuff' => true\nexport var InputField = function InputField(_ref) {\n  var label = _ref.label,\n      textarea = _ref.textarea,\n      _ = _ref.size,\n      props = _objectWithoutProperties(_ref, [\"label\", \"textarea\", \"size\"]);\n\n  var InputOrTextarea = Input;\n\n  if (textarea) {\n    InputOrTextarea = Textarea;\n  }\n\n  var _useField = useField(props),\n      _useField2 = _slicedToArray(_useField, 2),\n      field = _useField2[0],\n      error = _useField2[1].error;\n\n  return __jsx(FormControl, {\n    isInvalid: !!error\n  }, __jsx(FormLabel, {\n    htmlFor: field.name\n  }, label), __jsx(InputOrTextarea, _extends({}, field, props, {\n    id: field.name\n  })), error ? __jsx(FormErrorMessage, null, error) : null);\n};","map":null,"metadata":{},"sourceType":"module"}