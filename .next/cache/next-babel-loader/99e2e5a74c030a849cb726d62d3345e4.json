{"ast":null,"code":"var __jsx = React.createElement;\nimport { Box, Button } from \"@chakra-ui/core\";\nimport { Form, Formik } from \"formik\";\nimport { useRouter } from \"next/router\";\nimport React from \"react\";\nimport { InputField } from \"../components/InputField\";\nimport { Layout } from \"../components/Layout\";\nimport { useCreatePostMutation } from \"../generated/graphql\";\nimport { useIsAuth } from \"../utils/useIsAuth\";\nimport { withApollo } from \"../utils/withApollo\";\n\nconst CreatePost = ({}) => {\n  const router = useRouter();\n  useIsAuth();\n  const [createPost] = useCreatePostMutation();\n  return __jsx(Layout, {\n    variant: \"small\"\n  }, __jsx(Formik, {\n    initialValues: {\n      title: \"\",\n      text: \"\"\n    },\n    onSubmit: async values => {\n      const {\n        errors\n      } = await createPost({\n        variables: {\n          input: values\n        },\n        update: cache => {\n          cache.evict({\n            fieldName: \"posts:{}\"\n          });\n        }\n      });\n\n      if (!errors) {\n        router.push(\"/\");\n      }\n    }\n  }, ({\n    isSubmitting\n  }) => __jsx(Form, null, __jsx(InputField, {\n    name: \"title\",\n    placeholder: \"title\",\n    label: \"Title\"\n  }), __jsx(Box, {\n    mt: 4\n  }, __jsx(InputField, {\n    textarea: true,\n    name: \"text\",\n    placeholder: \"text...\",\n    label: \"Body\"\n  })), __jsx(Button, {\n    mt: 4,\n    type: \"submit\",\n    isLoading: isSubmitting,\n    variantColor: \"teal\"\n  }, \"create post\"))));\n};\n\nexport default withApollo({\n  ssr: false\n})(CreatePost);","map":null,"metadata":{},"sourceType":"module"}