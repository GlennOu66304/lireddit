{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Formik, Form } from \"formik\";\nimport { Box, Button, Link, Flex } from \"@chakra-ui/core\";\nimport { Wrapper } from \"../components/Wrapper\";\nimport { InputField } from \"../components/InputField\";\nimport { useLoginMutation, MeDocument } from \"../generated/graphql\";\nimport { toErrorMap } from \"../utils/toErrorMap\";\nimport { useRouter } from \"next/router\";\nimport NextLink from \"next/link\";\nimport { withApollo } from \"../utils/withApollo\";\n\nvar Login = function Login(_ref) {\n  _objectDestructuringEmpty(_ref);\n\n  var router = useRouter();\n\n  var _useLoginMutation = useLoginMutation(),\n      _useLoginMutation2 = _slicedToArray(_useLoginMutation, 1),\n      login = _useLoginMutation2[0];\n\n  return __jsx(Wrapper, {\n    variant: \"small\"\n  }, __jsx(Formik, {\n    initialValues: {\n      usernameOrEmail: \"\",\n      password: \"\"\n    },\n    onSubmit: /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, _ref2) {\n        var _response$data, _response$data2;\n\n        var setErrors, response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setErrors = _ref2.setErrors;\n                _context.next = 3;\n                return login({\n                  variables: values,\n                  update: function update(cache, _ref4) {\n                    var data = _ref4.data;\n                    cache.writeQuery({\n                      query: MeDocument,\n                      data: {\n                        __typename: \"Query\",\n                        me: data === null || data === void 0 ? void 0 : data.login.user\n                      }\n                    });\n                    cache.evict({\n                      fieldName: \"posts:{}\"\n                    });\n                  }\n                });\n\n              case 3:\n                response = _context.sent;\n\n                if ((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.login.errors) {\n                  setErrors(toErrorMap(response.data.login.errors));\n                } else if ((_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.login.user) {\n                  if (typeof router.query.next === \"string\") {\n                    router.push(router.query.next);\n                  } else {\n                    // worked\n                    router.push(\"/\");\n                  }\n                }\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  }, function (_ref5) {\n    var isSubmitting = _ref5.isSubmitting;\n    return __jsx(Form, null, __jsx(InputField, {\n      name: \"usernameOrEmail\",\n      placeholder: \"username or email\",\n      label: \"Username or Email\"\n    }), __jsx(Box, {\n      mt: 4\n    }, __jsx(InputField, {\n      name: \"password\",\n      placeholder: \"password\",\n      label: \"Password\",\n      type: \"password\"\n    })), __jsx(Flex, {\n      mt: 2\n    }, __jsx(NextLink, {\n      href: \"/forgot-password\"\n    }, __jsx(Link, {\n      ml: \"auto\"\n    }, \"forgot password?\"))), __jsx(Button, {\n      mt: 4,\n      type: \"submit\",\n      isLoading: isSubmitting,\n      variantColor: \"teal\"\n    }, \"login\"));\n  }));\n};\n\nexport default withApollo({\n  ssr: false\n})(Login);","map":null,"metadata":{},"sourceType":"module"}